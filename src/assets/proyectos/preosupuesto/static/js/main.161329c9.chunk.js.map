{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helpers.js","components/ControlPresupuesto.js","App.js","serviceWorker.js","index.js"],"names":["Error","_ref","mensaje","react_default","a","createElement","className","Pregunta","props","guardarPresupuesto","guardarPreguntaPresupuesto","guardarRestante","_useState","useState","_useState2","Object","slicedToArray","cantidad","guardarCantidad","_useState3","_useState4","error","guardarError","react","components_Error","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombreGasto","guardarNombreGasto","cantidadGasto","guardarCantidadGasto","_useState5","_useState6","gasto","id","shortid","generate","Gasto","Listado","gastos","map","components_Gasto","key","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","preguntaPresupuesto","_useState7","_useState8","crearGasto","_useState9","_useState10","_useState11","_useState12","guardarGastos","useEffect","listadoGastos","concat","toConsumableArray","presupuestoRestante","components_Pregunta","components_Formulario","components_Listado","components_ControlPresupuesto","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.161329c9.chunk.js","sourcesContent":["import React from 'react';\n\nconst Error = ({mensaje}) =>  (  \n    <p className=\"alert alert-danger error\">{mensaje}</p>\n);\n\nexport default Error;","import React, { Fragment, useState } from 'react';\nimport Error from './Error';\n\nfunction Pregunta(props) {\n\n    const { guardarPresupuesto, guardarPreguntaPresupuesto, guardarRestante } = props;\n\n    // definir el state\n    const [ cantidad, guardarCantidad] = useState(0);\n    const [ error, guardarError] = useState(false);\n\n\n    // validar el presupuesto \n    const agregarPresupuesto = e => {\n        e.preventDefault();\n\n        // validar\n        if( cantidad < 1 || isNaN( cantidad) ) {\n            guardarError(true);\n            return;\n        }\n\n        // Si se pasa la validación\n        guardarError(false);\n        guardarPresupuesto( cantidad );\n        guardarRestante(cantidad);\n        guardarPreguntaPresupuesto(false);\n    }\n\n    return(\n       <Fragment>\n            <h2>Coloca tu Presupuesto</h2>\n\n            {error ? <Error mensaje='El presupuesto es Incorrecto' />  : null }\n\n            <form\n                onSubmit={agregarPresupuesto}\n            >\n                <input type=\"number\"\n                        className=\"u-full-width\"\n                        placeholder=\"Agrega tu Presupuesto\"\n                        onChange={e => guardarCantidad( parseInt(e.target.value, 10) ) }\n                />\n                <input type=\"submit\" className=\"button-primary u-full-width\" value=\"Definir Presupuesto\" />\n            </form>\n       </Fragment>\n    );\n}\nexport default Pregunta;","import React, { useState } from 'react';\nimport Error from './Error';\nimport shortid from 'shortid';\n\nfunction Formulario(props) {\n\n    const { guardarGasto, guardarCrearGasto } = props;\n\n    // state\n    const [ nombreGasto, guardarNombreGasto ] = useState('');\n    const [ cantidadGasto, guardarCantidadGasto] = useState(0);\n    const [ error, guardarError ] = useState(false);\n\n\n    // Cuando se agrega el gasto\n    const agregarGasto = e => {\n        e.preventDefault();\n\n        // validar\n        if(cantidadGasto < 1 || isNaN( cantidadGasto ) || nombreGasto === '' ) {\n            guardarError(true);\n            return;\n        }\n\n        // construir objeto de gasto\n        const gasto = {\n            nombreGasto, \n            cantidadGasto, \n            id: shortid.generate()\n        }\n\n        // pasar el gasto al componente principal\n        guardarGasto(gasto);\n        guardarCrearGasto(true);\n\n        // eliminar alerta\n        guardarError(false)\n\n        // Resetear el form\n        guardarNombreGasto('');\n        guardarCantidadGasto('');\n\n    }\n\n    return(\n        <form\n            onSubmit={agregarGasto}\n        >\n            <h2>Agrega tus Gastos Aquí</h2>\n\n            {error ? <Error mensaje='Ambos campos son obligatorios o Presupuesto Incorrecto' />  : null }\n\n            <div className=\"campo\">\n                <label>Nombre Gasto</label>\n                <input \n                    type=\"text\"\n                    className=\"u-full-width\"\n                    placeholder=\"Ej. Transporte\"\n                    onChange={e => guardarNombreGasto(e.target.value)}\n                    value={nombreGasto}\n                />\n            </div>\n            <div className=\"campo\">\n                <label>Cantidad Gasto</label>\n                <input \n                    type=\"number\"\n                    className=\"u-full-width\"\n                    placeholder=\"Ej. 300\"\n                    onChange={e => guardarCantidadGasto( parseInt( e.target.value, 10) )}\n                    value={cantidadGasto}\n                />\n            </div>\n\n            <input type=\"submit\" className=\"button-primary u-full-width\" value=\"Agregar Gasto\" />\n\n        </form>\n    )\n}\nexport default Formulario;","import React from 'react';\n\nconst Gasto = ({gasto}) => ( \n    <li className=\"gastos\">\n        <p>\n            {gasto.nombreGasto}\n            <span className=\"gasto\">$ {gasto.cantidadGasto}</span>\n        </p>\n    </li>\n );\n\n \nexport default Gasto;","import React from 'react';\nimport Gasto from './Gasto';\n\nfunction Listado({gastos}) {\n\n    return(\n        <div className=\"gastos-realizados\">\n            <h2>Listado</h2>\n            {gastos.map(gasto => (\n                <Gasto \n                    key={gasto.id}\n                    gasto={gasto}\n                />\n            ))}\n        </div>\n    )\n}\n\nexport default Listado;","export const revisarPresupuesto = (presupuesto,restante) => {\n    let clase;\n    // Comprobar el 25% \n    if( (presupuesto / 4) > restante) {\n         clase = 'alert alert-danger';\n    } else if( (presupuesto / 2) > restante) {\n        clase = 'alert alert-warning'\n    } else {\n        clase = 'alert alert alert-success';\n    }\n    return clase;\n} ","import React, {Fragment} from 'react';\nimport { revisarPresupuesto } from '../helpers';\n\nconst ControlPresupuesto = ({presupuesto, restante}) => ( \n    <Fragment>\n        <div className=\"alert alert-primary\">\n            Presupuesto: $ {presupuesto}\n        </div>\n        <div className={revisarPresupuesto(presupuesto, restante)}>\n            Restante : $ {restante}\n        </div>\n    </Fragment>\n\n );\n \nexport default ControlPresupuesto;","import React, { useState, useEffect } from 'react';\nimport Pregunta from './components/Pregunta';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\nfunction App() {\n\n  // state\n  const [ presupuesto, guardarPresupuesto] = useState(0);\n  const [ restante, guardarRestante ] = useState(0);\n  const [ preguntaPresupuesto, guardarPreguntaPresupuesto] = useState(true);\n  const [ crearGasto, guardarCrearGasto ] = useState(false);\n  const [ gasto, guardarGasto] = useState({});\n  const [ gastos, guardarGastos ] = useState([]);\n\n  useEffect(() => {\n      if(crearGasto) {\n        const listadoGastos = [...gastos, gasto];\n        guardarGastos(listadoGastos);\n\n        // restar el presupuesto\n        const presupuestoRestante = restante - gasto.cantidadGasto;\n        guardarRestante(presupuestoRestante);\n\n        // Una vez que se agrega, lo ponemos como false\n        guardarCrearGasto(false);\n      }\n  }, [crearGasto, gastos, gasto, restante]);\n\n\n  return (\n    <div className=\"App container\">\n        <header>\n            <h1>Gasto Semanal</h1>\n\n            <div className=\"contenido-principal contenido\">\n              { (preguntaPresupuesto) \n                ? \n                  <Pregunta \n                    guardarPresupuesto={guardarPresupuesto}\n                    guardarPreguntaPresupuesto={guardarPreguntaPresupuesto}\n                    guardarRestante={guardarRestante}\n                  />\n                : (\n                      <div className=\"row\">\n                          <div className=\"one-half column\">\n                              <Formulario \n                                guardarGasto={guardarGasto}\n                                guardarCrearGasto={guardarCrearGasto}\n                              />\n                          </div>\n\n                          <div className=\"one-half column\">\n                              <Listado\n                                  gastos={gastos}\n                              />\n\n                              <ControlPresupuesto\n                                  presupuesto={presupuesto}\n                                  restante={restante}\n                              />\n                          </div>\n                      </div>\n                  )\n              } \n            </div>\n        </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}